{"version":3,"sources":["actions/types.js","apis/streams.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","renderError","error","touched","className","renderInput","input","label","meta","autoComplete","reduxForm","form","validate","formValues","errors","title","description","handleSubmit","onSubmit","Field","name","component","connect","createStream","getState","userId","auth","post","history","push","state","ownProps","stream","match","params","editStream","patch","useParams","useEffect","initialValues","_","pick","Modal","content","actions","onDismiss","ReactDOM","createPortal","onClick","e","stopPropagation","document","querySelector","deleteStream","delete","Fragment","to","Object","values","currentUserId","isSignedIn","fetchStreams","renderAdmin","map","style","textAlign","renderCreate","Header","App","basename","path","exact","StreamList","StreamCreate","StreamEdit","StreamDelete","StreamShow","INITIAL_STATE","authReducer","action","streamReducer","mapKeys","omit","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.126ec26a.chunk.js","sourcesContent":["export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://my-json-server.typicode.com/jimmytan123/apiDemo',\n});\n","import { createBrowserHistory } from 'history';\n\n//own custom history object, and do not use BrowserRouter\nexport default createBrowserHistory();\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n} from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId, //accept user id and store it in the payload\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\n// following RESTful conventions to create action creators\n\n// create record POST\nexport const createStream = (formValues) => {\n  return async (dispatch, getState) => {\n    //getState method, second argu of the redux-thunk to get app state info\n\n    //get userId to know who just created the stream, that is from google auth\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', {\n      ...formValues,\n      userId,\n    });\n\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data,\n    });\n\n    // programmatic navigation to get the user back to the root route after successfully create a stream\n\n    // push to navigate user\n    history.push('/');\n  };\n};\n\n// list all records GET\nexport const fetchStreams = () => {\n  return async (dispatch) => {\n    const response = await streams.get('/streams');\n\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data,\n    });\n  };\n};\n\n// get one particular record GET\nexport const fetchStream = (id) => {\n  return async (dispatch) => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data,\n    });\n  };\n};\n\n// update a record PUT\nexport const editStream = (id, formValues) => {\n  return async (dispatch) => {\n    const response = await streams.patch(`/streams/${id}`, formValues);\n\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data,\n    });\n\n    // push to navigate user\n    history.push('/');\n  };\n};\n\n// delete a record DELETE\nexport const deleteStream = (id) => {\n  return async (dispatch) => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({\n      type: DELETE_STREAM,\n      payload: id,\n    });\n\n    // push to navigate user\n    history.push('/');\n  };\n};\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst StreamForm = ({ handleSubmit, onSubmit }) => {\n  // call back function for form submit handling\n  const onFormSubmit = (formValues) => {\n    //console.log(formValues);\n    onSubmit(formValues);\n  };\n\n  return (\n    <form\n      className=\"ui form error\"\n      onSubmit={handleSubmit(onFormSubmit)} //handleSubmit in redux-form, pass it as a prop\n    >\n      <Field\n        name=\"title\"\n        component={renderInput}\n        type=\"text\"\n        label=\"Enter Title\"\n      />\n      <Field\n        name=\"description\"\n        component={renderInput}\n        type=\"text\"\n        label=\"Enter Description\"\n      />\n      <button className=\"ui button primary\">Submit</button>\n    </form>\n  );\n};\n\n//You must define the stateless function outside of your render() method, or else it will be recreated on every render and will force the Field to rerender because its component prop will be different. If you are defining your stateless function inside of render(), it will not only be slower, but your input will lose focus whenever the entire form component rerenders.\n\n// The validate function is a special function that Redux Form expects us to pass to the component\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    // only run if the title is empty\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nconst renderError = ({ error, touched }) => {\n  if (touched && error) {\n    return (\n      <div className=\"ui error message\">\n        <div className=\"header\">{error}</div>\n      </div>\n    );\n  }\n};\n\nconst renderInput = ({ input, label, meta }) => {\n  // conditional class name\n  // console.log(meta);\n  const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n\n  // set of properties\n  return (\n    <div className={className}>\n      <label>{label}</label>\n      <input {...input} autoComplete=\"off\" />\n      {renderError(meta)}\n    </div>\n  );\n};\n\nexport default reduxForm({\n  // a unique name for the form\n  form: 'streamForm',\n  validate: validate,\n})(StreamForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nconst StreamCreate = ({ createStream }) => {\n  // call back function\n  const onSubmit = (formValues) => {\n    //console.log(formValues);\n    createStream(formValues);\n  };\n\n  return (\n    <div>\n      <h3>Create a Stream</h3>\n      <StreamForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nexport default connect(null, { createStream })(StreamCreate);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport { useParams } from 'react-router-dom';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\n\nconst StreamEdit = ({ fetchStream, editStream, stream }) => {\n  // get the id params on the URL\n  const { id } = useParams();\n\n  // fetch single stream based on id\n  useEffect(() => {\n    fetchStream(id);\n  }, [fetchStream, id]);\n\n  const onSubmit = (formValues) => {\n    //console.log(formValues);\n    editStream(id, formValues);\n  };\n\n  return (\n    <>\n      {!stream ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          <h3>Edit a Stream</h3>\n          {/* initialValues is the special prop of Redux Form */}\n          <StreamForm\n            onSubmit={onSubmit}\n            initialValues={_.pick(stream, 'title', 'description')} //lodash method\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// React Protal\n// need to go to index.html to create a div with id modal\n// first argu: JSX, second argu: reference to the html element\nconst Modal = ({ title, content, actions, onDismiss }) => {\n  return ReactDOM.createPortal(\n    <div onClick={onDismiss} className=\"ui dimmer modals visiable active\">\n      <div\n        onClick={(e) => e.stopPropagation()} //prevent event to bubble up and cause go to homepage\n        className=\"ui standard modal visiable active\"\n      >\n        <div className=\"header\">{title}</div>\n        <div className=\"content\">{content}</div>\n        <div className=\"actions\">{actions}</div>\n      </div>\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { useParams, Link } from 'react-router-dom';\n\nconst StreamDelete = ({ fetchStream, deleteStream, stream }) => {\n  // get the id params on the URL\n  const { id } = useParams();\n\n  // fetch single stream based on id\n  useEffect(() => {\n    fetchStream(id);\n  }, [fetchStream, id]);\n\n  // jsx stored in a function, to pass as a prop to Modal component\n  const renderActions = () => {\n    return (\n      <React.Fragment>\n        <button onClick={() => deleteStream(id)} className=\"ui button negative\">\n          Delete\n        </button>\n        <Link to=\"/\" className=\"ui button\">\n          Cancel\n        </Link>\n      </React.Fragment>\n    );\n  };\n\n  // to make sure when initial loads when stream state is not ready, still output content\n  const renderContent = () => {\n    if (!stream) {\n      return 'Are you sure you want to delete this steam?';\n    }\n\n    return `Are you sure you want to delete the stream with title: ${stream.title}?`;\n  };\n\n  return (\n    <Modal\n      title=\"Delete Stream\"\n      content={renderContent()}\n      actions={renderActions()}\n      onDismiss={() => history.push('/')}\n    />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\n  StreamDelete\n);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nconst StreamList = ({ fetchStreams, streams, currentUserId, isSignedIn }) => {\n  //console.log(streams);\n\n  // fetch stream list once load\n  useEffect(() => {\n    fetchStreams();\n  }, [fetchStreams]);\n\n  const renderAdmin = (stream) => {\n    /* if the stream item object's user id equals to the current login user id\n    then show the admin buttons */\n    if (stream.userId === currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  const renderList = () => {\n    return streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\"></i>\n          <div className=\"content\">\n            <Link to={`/streams/show/${stream.id}`} className=\"header\">\n              {stream.title}\n            </Link>\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const renderCreate = () => {\n    if (isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>Streams</h2>\n      <div className=\"ui celled list\">{renderList()}</div>\n      {renderCreate()}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  /* Object.values pass a object as an argument and put value into an array\n  so we can map over the array the return jsx list for streams */\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport { useParams } from 'react-router-dom';\n\nconst StreamShow = ({ fetchStream, stream }) => {\n  // get the id params on the URL\n  const { id } = useParams();\n\n  // fetch single stream based on id\n  useEffect(() => {\n    fetchStream(id);\n  }, [fetchStream, id]);\n\n  return (\n    <>\n      {!stream ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          <h1>{stream.title}</h1>\n          <h5>{stream.description}</h5>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n  return (\n    <div className=\"ui secondary pointing menu\">\n      <Link to=\"/\" className=\"item\">\n        {' '}\n        Streamer{' '}\n      </Link>\n      <div className=\"right menu\">\n        <Link to=\"/\" className=\"item\">\n          All Streams\n        </Link>\n        {/* <GoogleAuth /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { Router, Route, Switch } from 'react-router-dom';\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './Header';\nimport history from '../history';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <Router history={history} basename=\"streamsDemo\">\n        <div>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={StreamList} />\n            <Route path=\"/streams/new\" component={StreamCreate} />\n            <Route path=\"/streams/edit/:id\" component={StreamEdit} />\n            <Route path=\"/streams/delete/:id\" component={StreamDelete} />\n            <Route path=\"/streams/show/:id\" component={StreamShow} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\n\n// initial state\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import _ from 'lodash';\nimport {\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n} from '../actions/types';\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      // since mapKeys return a big object, so we need to use ... to add into the overall object\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n    // case fetch, create, edit return the same syntax since the response all return a single record\n    case FETCH_STREAM:\n      // copy and create a new state, add key/value\n      return { ...state, [action.payload.id]: action.payload };\n\n    case CREATE_STREAM: {\n      return { ...state, [action.payload.id]: action.payload };\n    }\n\n    case EDIT_STREAM: {\n      return { ...state, [action.payload.id]: action.payload };\n    }\n\n    case DELETE_STREAM:\n      // use lodash omit method to omit a object\n      return _.omit(state, action.payload);\n\n    // if using Vanilla JS\n    //const newState = { ...state };\n    //delete newState[action.payload];\n    //return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default streamReducer;\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  streams: streamReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n//https://github.com/zalmoxisus/redux-devtools-extension\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}